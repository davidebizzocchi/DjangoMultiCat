# docker-compose.local.yml

services:
  cheshire-cat-core:
    # build:
    #   context: ../../core/core
    container_name: cheshire_cat_core
    image: ghcr.io/cheshire-cat-ai/core:latest

    env_file:
      - ./.env
    depends_on:
      - cheshire-cat-vector-memory
    expose:
      - 1865
    # extra_hosts:
    #   - "host.docker.internal:host-gateway" # This add an entry to /etc/hosts file in the container mapping host.docker.internal to the host machine IP addr, allowing the container to access services running on the host, not only on Win and Mac but also Linux. See https://docs.docker.com/desktop/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host and https://docs.docker.com/reference/cli/docker/container/run/#add-host
    environment:
      # Timezone
      - TZ=${CCAT_TIMEZONE:-UTC}
    volumes:
      - long_term_memory:/app/cat/data
      - cheschire_cat_models:/app/cat/models
      - static_volume_cat:/app/cat/static
    command:
      - python
      - "-m"
      - "cat.main"
    restart: unless-stopped

  cheshire-cat-vector-memory:
    image: qdrant/qdrant:latest
    container_name: cheshire_cat_vector_memory
    expose:
      - 6333
    volumes:
      - long_term_memory:/qdrant/storage
    restart: unless-stopped

  django-cat-app:
    image: nonnodave/cat-for-all:django-prod
    expose:
      - 8000
    env_file:
      - ./.env
    command: sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --no-input --clear &&
             gunicorn app.wsgi:application --bind 0.0.0.0:8000 --timeout 120 --worker-class gevent"
    volumes:
      - static_volume_django:/home/app/web/staticfiles
      - uploads:/home/app/web/media
    depends_on:
      - db
      - cheshire-cat-core
    logging:
      options:
        max-size: "10m"
        max-file: "3"

    # networks:
    #   - app_network

  db:
    image: postgres:17.0-alpine3.20
    volumes:
      - postgres_data-prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword

  nginx-cat:
    image: nonnodave/cat-for-all:nginx-django
    restart: always
    volumes:
      - static_volume_django:/staticfiles_django
      - static_volume_cat:/staticfiles_cat
      - uploads:/uploads
    expose:
      - 80
    depends_on:
      - django-cat-app

 
volumes:
  postgres_data-prod:
  long_term_memory:
  uploads:
  static_volume_django:
  static_volume_cat:
  cheschire_cat_models:
    name: cheschire_cat_models


networks:
  default:
    external: true
    name: service-network